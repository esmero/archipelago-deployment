{
    "data": {
        "type": "metadatadisplay_entity--metadatadisplay_entity",
        "id": "6c405928-9ae8-4557-b062-91fcf2b0af0a",
        "attributes": {
            "name": "IIIF Presentation API 3 Creative Works Series Manifest",
            "twig": "{#-\n\nUpdated for 1.4.0 \n\nPreviously Updated 31\/11\/2023 for 1.3.0. Fixes Video\/Audio Urls when attached directly to a top object\n\nPreviously Updated 31\/10\/2023 for 1.3.0 \n\n- Includes top level objects too now.\n\nThis Template generates IIIF 3.0 API Manifest for Creative Works Series using a Drupal Views\nJSON to be used by a Drupal Views (REST) to generate a simpler to parse\/join listing of Canvases\nFor a Creative Works Series Manifest\n\nStructures passed from Archipelago are\n- node\n  The full Node entity\n- data\n  The Full JSON Structure converted in an Array\n- iiif_server\n  The publicly available IIIF Server (Global Setting)\n\nSince JSON was decoded into the 'data' values are valid PHP but could not\nbe valid JSON when outputting. So We use data.description|json_encode|raw\nWithout Double quotes.\n-#}\n{%- set structureCanvasIds = [] %}\n{%- set pdf_resolution = (150\/72) %} \n{% set max_thumb_width = 240 %}\n{%- set baseurl =  url('<front>')|render -%} \n{% set Webserverurl =  url('<front>')|render|replace({':8001\/':''}) ~ ':8183\/iiif\/2\/' %}\n{% set IIIFserverurl = iiif_server ? iiif_server ~ '\/': Webserverurl %}\n{% set currenturl = url('<current>')|render %}\n{% if node.id %}\n\t{# this is needed to the View Argument can conform to the format even when no node exists when saving the template #}\n    {% set nodeid = node.id %}\n    {% set nodeurl = url('entity.node.canonical', {'node': node.id}, {'absolute': true}) %}\n{% else %}\n    {% set nodeid = 1 %} \n    {% set nodeurl = currenturl %}\n{% endif%}\n{% set len = language.getId() ? language.getId() : \"en\" %}\n{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/InC-EDU\/1.0\/\" %}\n{% if data.rights|length > 0 or data.rights_statements|length > 0 %}\n\t{% if data.rights|length > 0 %}\n\t\t{% set computed_rights = data.rights %}\n\t{% endif %}\n{% elseif data.rights_statements|length > 0 %}\n\t{% if data.rights_statements in ['In Copyright'] %} \n\t\t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/InC\/1.0\/\" %}\n\t{% endif %}\n\t{% if data.rights_statements in ['In Copyright - EU Orphan Work'] %} \n    \t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/InC-OW-EU\/1.0\/\" %}\n\t{% endif %}\n\t{% if data.rights_statements in ['In Copyright - Educational Use Permitted'] %} \n\t   \t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/InC-EDU\/1.0\/\" %}\n\t{% endif %}\n\t{% if data.rights_statements in ['In Copyright - Non-Commercial Use Permitted'] %} \n\t\t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/InC-NC\/1.0\/\" %}\n\t{% endif %}\n\t{% if data.rights_statements in ['In Copyright - Rights-holder(s) Unlocatable or Unidentifiable'] %} \n\t\t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/InC-RUU\/1.0\/\" %}\n\t{% endif %}\n\t{% if data.rights_statements in ['No Copyright - Contractual Restrictions'] %} \n\t\t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/NoC-CR\/1.0\/\" %}\n\t{% endif %} \n\t{% if data.rights_statements in ['No Copyright - Non-Commercial Use Only'] %} \n\t\t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/NoC-NC\/1.0\/\" %}\n\t{% endif %}\n\t{% if data.rights_statements in ['No Copyright - Other Known Legal Restrictions'] %} \n\t\t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/NoC-OKLR\/1.0\/\" %}\n\t{% endif %}\n\t{% if data.rights_statements in ['No Copyright - United States'] %} \n\t\t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/NoC-US\/1.0\/\" %}\n\t{% endif %} \n\t{% if data.rights_statements in ['Copyright Not Evaluated'] %} \n\t\t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/CNE\/1.0\/\" %}\n\t{% endif %}\n\t{% if data.rights_statements in ['Copyright Undetermined'] %} \n\t\t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/UND\/1.0\/\" %}\n\t{% endif %}\n\t{% if data.rights_statements in ['No Known Copyright'] %} \n\t\t{% set computed_rights = \"http:\/\/rightsstatements.org\/vocab\/NKC\/1.0\/\" %}\n\t{% endif %}\n{% endif %}\n{\n{# Top Object Metadata #}\n\"@context\": [\n  \"http:\/\/www.w3.org\/ns\/anno.jsonld\",\n  \"http:\/\/iiif.io\/api\/presentation\/3\/context.json\"\n],\n\"type\": \"Manifest\",\n\"id\": \"{{ currenturl }}\",\n\"label\": {\n\"{{ len }}\": [\n{{ node.label|json_encode|raw }}\n]\n},\n\"requiredStatement\": {\n\"label\": { \"en\": [ \"Attribution\" ] },\n\"value\": { \"en\": [ \"Provided by Archipelago Deployment\" ] }\n},\n\"rights\": {{ computed_rights|json_encode|raw }},\n\"metadata\": [\n{% for agent in attribute(data, 'edm_agent') %}\n    {\n    \"label\": {\n    \"{{ len }}\": [\n    {{ agent.role_label|json_encode|raw }}\n    ]\n    },\n    \"value\": {\n    \"{{ len }}\": [\n    {{ agent.name_label|json_encode|raw }}\n    ]\n    }\n    },\n{% endfor %}\n{\n\"label\": {\n\"{{ len }}\": [\n\"description\"\n]\n},\n\"value\": {\n\"{{ len }}\": [\n{{ data.description|json_encode|raw }}\n]\n}\n},\n{\n\"label\": {\n\"{{ len }}\": [\n\"navDate\"\n]\n},\n\"value\":  {\n\"{{ len }}\": [\n   \"{{ node.getChangedTime|date(\"F jS \\\\a\\\\t g:ia\") }}\"\n    ]\n  }\n},\n{\n\"label\": {\n   \"{{ len }}\": [\n       \"license\"\n  ]\n},\n\"value\": {\n  \"{{ len }}\": [\n     {{ computed_rights|json_encode|raw }}\n     ]\n    }\n  }\n],\n{# New Jan 2023:added to bring IIIF CWS and IIIF Normal V3 in sync #}\n{%- if attribute(data, 'ismemberof') %}\n    {%- if attribute(data, 'ismemberof') is iterable -%}\n\t    {%- for collection in attribute(data, 'ismemberof') -%}\n           {% set parentnode = bamboo_load_entity('node', collection) %}\n           {% if parentnode %}\n             {%  set parentcollectionurl = url('format_strawberryfield.metadatadisplay_caster', {'node': parentnode.uuid.value, 'metadataexposeconfig_entity': 'iiifmanifest3collection', 'format':'default.jsonld'}, {'absolute': true}) -%}\n\t       {% endif %}\n        {%- endfor -%}\n\t{%- else -%}\n         {% set parentnode = bamboo_load_entity('node',  attribute(data, 'ismemberof')) %}\n        {% if parentnode %}\n          {%  set parentcollectionurl = url('format_strawberryfield.metadatadisplay_caster', {'node': parentnode.uuid.value, 'metadataexposeconfig_entity': 'iiifmanifest3collection', 'format':'default.jsonld'}, {'absolute': true}) -%}\n        {%- endif -%}\n  {%- endif -%}\n{%- endif -%}\n{%- if attribute(data, 'ispartof') -%}\n   {%- if attribute(data, 'ispartof') is iterable -%}\n\t    {%- for child in attribute(data, 'ispartof') -%}\n           {% set parentnode = bamboo_load_entity('node', child) %}\n           {% if parentnode %}\n             {%  set parentcollectionurl = url('format_strawberryfield.metadatadisplay_caster', {'node': parentnode.uuid.value, 'metadataexposeconfig_entity': 'iiifmanifest3cws', 'format':'default.jsonld'}, {'absolute': true}) -%}\n\t       {% endif %}\n        {%- endfor -%}\n\t{%- else -%}\n         {% set parentnode = bamboo_load_entity('node',  attribute(data, 'ispartof')) %}\n        {% if parentnode %}\n          {%  set parentcollectionurl = url('format_strawberryfield.metadatadisplay_caster', {'node': parentnode.uuid.value, 'metadataexposeconfig_entity': 'iiifmanifest3cws', 'format':'default.jsonld'}, {'absolute': true}) -%}\n        {%- endif -%}\n  {%- endif -%}\n{%- endif -%}\n{#- end New Jan 2023 -#}\n{%- if node.uuid.value -%} \n    \"service\": [\n        { \n            \"id\": \"{{ baseurl }}iiifcontentsearch\/v2\/do\/{{ node.uuid.value }}\/metadatadisplayexposed\/iiifmanifest3cws\/mode\/advanced\/page\/0\",\n            \"type\": \"SearchService2\" \n        }, \n        { \n            \"id\": \"{{ baseurl }}iiifcontentsearch\/v1\/do\/{{ node.uuid.value }}\/metadatadisplayexposed\/iiifmanifest3cws\/mode\/advanced\/page\/0\",\n            \"type\": \"SearchService1\", \n            \"@context\": \"http:\/\/iiif.io\/api\/search\/1\/context.json\", \n            \"profile\": \"http:\/\/iiif.io\/api\/search\/1\/search\" \n        }, \n        { \n            \"@id\": \"{{ baseurl }}iiifcontentsearch\/v1\/do\/{{ node.uuid.value }}\/metadatadisplayexposed\/iiifmanifest3cws\/mode\/advanced\/page\/0\",\n            \"@context\": \"http:\/\/iiif.io\/api\/search\/0\/context.json\", \n            \"profile\": \"http:\/\/iiif.io\/api\/search\/0\/search\" \n        }\n    ],\n{%- endif -%}\n{# fetch all children using a View and attach them as Items #}\n\"items\": [\n{#--- START TOP LEVEL MEDIA ----#}\n{%- set itemCount = 0 %}\n{%- set document_count = attribute(data, 'as:document')|length -%}\n{%- set TotalpageCount = 0 -%}\n{%- for document in attribute(data, 'as:document')%}\n  {%  if document['flv:exif'].PageCount -%} \n    {%- set TotalpageCount = (TotalpageCount + document['flv:exif'].PageCount) -%}\n  {% endif %}\n{%- endfor -%}\n{% for document in attribute(data, 'as:document')%} \n{#- WIZARDLY UPDATED BY ARCHIPELAGO -#} \n{%  if document['flv:exif'].PageCount %} \n   {%- set pageCount =  document['flv:exif'].PageCount -%} \n   {%- set cantaloupeid  = IIIFserverurl ~ document['url']|replace({'s3:\/\/':''})|replace({'private:\/\/':''})|url_encode -%}\n   {%  for pagenumber in 1..pageCount %}{ \n        {%- set itemCount = itemCount + 1 -%} \n        {% if attribute(document[\"flv:pdfinfo\"], pagenumber) %} \n            {% set width = attribute(document[\"flv:pdfinfo\"], pagenumber).width ? (attribute(document[\"flv:pdfinfo\"], pagenumber).width * pdf_resolution)|round : 600 %}\n            {% set height = attribute(document[\"flv:pdfinfo\"], pagenumber).height ? (attribute(document[\"flv:pdfinfo\"], pagenumber).height * pdf_resolution)|round : 450 %}\n         {% else  %} \n            {% if attribute(document[\"flv:identify\"], pagenumber) %} \n               {% set width = attribute(document[\"flv:identify\"], pagenumber).width ? (attribute(document[\"flv:identify\"], pagenumber).width * pdf_resolution)|round : 600 %}\n               {% set height = attribute(document[\"flv:identify\"], pagenumber).height ? (attribute(document[\"flv:identify\"], pagenumber).height * pdf_resolution)|round : 450 %}\n            {% else  %} \n               {% set width = 600 %} \n               {% set height = 450 %} \n            {% endif %} \n         {% endif %} \n         {% set thumb_width = width < max_thumb_width ? width: max_thumb_width %} \n         {% set thumb_height = (thumb_width\/width * height)|round() %} \n         {% set canvasId = nodeurl|render ~ '\/iiif\/' ~ document['dr:uuid'] ~ '\/canvas\/p' ~ pagenumber %} \n         {% set structureCanvasIds = structureCanvasIds|merge([canvasId]) %} \n         {% set thumbnail %} \n  \"thumbnail\": [{ \n  \"id\": \"{{ cantaloupeid }}\/full\/{{thumb_width}},\/0\/default.jpg?page={{ pagenumber }}\", \n  \"type\": \"Image\", \n  \"format\": \"image\/jpeg\", \n  \"width\": {{ thumb_width }}, \n  \"height\": {{ thumb_height }} \n}], \n  {% endset %}   \n      \"id\": \"{{ canvasId }}\", \n      \"type\": \"Canvas\", \n      \"label\": { \"{{ len }}\": [ \n      {%- if (pageCount > 1) -%} \n      {{ (loop.index ~ ' of ' ~ pageCount ~ ' pages: ' ~ data.label)|json_encode|raw }} \n      {% else %} \n        {{ data.label|json_encode|raw }} \n      {%- endif -%} \n      ]}, \n      {{ thumbnail }} \n      \"height\": {{ height }}, \n      \"width\": {{ width }}, \n      \"items\": [ \n        { \n          \"id\": \"{{ nodeurl }}\/iiif\/{{ document['dr:uuid'] }}\/page\/p{{ pagenumber}}\", \n          \"type\": \"AnnotationPage\", \n          \"items\": [ \n            { \n              \"id\": \"{{ nodeurl }}\/iiif\/{{ document['dr:uuid'] }}\/annotation\/p{{ pagenumber }}\", \n              \"type\": \"Annotation\", \n              \"motivation\": \"painting\", \n              {{ thumbnail }} \n              \"body\": { \n               \"id\": \"{{ cantaloupeid ~ ';' ~  pagenumber }}\/full\/full\/0\/default.jpg\",\n               \"type\": \"Image\",\n               \"format\": \"image\/jpeg\",\n               \"service\": [\n                  {\n                  \"id\": \"{{ cantaloupeid ~ ';' ~  pagenumber }}\",\n                  \"type\": \"ImageService2\",\n                  \"profile\": \"level2\"\n                   }\n                ]\n                {% if data.type in ['Book','Document','ArchivalDescription','Page','Letter'] %}\n                ,\n                \"seeAlso\": {\n                   \"@id\":  \"{{ nodeurl }}\/flavorsearch\/{{ document['dr:uuid'] }}\/ocr\/originalocr\/{{ pagenumber}}\",\n                   {# \"profile\": \"http:\/\/www.loc.gov\/standards\/alto\/v3\/alto.xsd\", NOTE THIS CAN BE ANY URL YOU ARE GOING TO USE TO IDENTIFY\/DISCERN between XML formats. Up to you#}\n                   \"format\": \"text\/xml\",\n                   \"label\": \"MINIOCR XML\"\n                }\n              {% endif %}\n              }, \n              \"target\": \"{{ nodeurl }}\/iiif\/{{ document['dr:uuid'] }}\/canvas\/p{{ pagenumber }}\" \n            } \n          ] \n        } \n      ] \n    }{{ itemCount < TotalpageCount ? ',' : '' }} \n    {% endfor %} \n  {% endif %}\n{% endfor %}\n{#- ImagesManifest -#} \n{#- Count Images upfront -#} \n{%- if (attribute(data, 'as:image')|length > 0) -%} \n  {%- if itemCount > 0 -%} \n,\n  {%- endif -%}\n{%- endif -%}\n{% for page in attribute(data, 'as:image') %}\n   {\n   {%- set itemCount = itemCount + 1 %} \n   {%- set cantaloupeid  = IIIFserverurl ~ page['url']|replace({'s3:\/\/':''})|replace({'private:\/\/':''})|url_encode -%} \n   {%- if page[\"flv:exif\"] -%} \n      {%- set width = page[\"flv:exif\"].ImageWidth -%} \n   {%- else  -%} \n      {%- set width = 1200 -%} \n  {%- endif -%} \n  {%- if page[\"flv:exif\"] -%} \n    {%- set height = page[\"flv:exif\"].ImageHeight -%} \n  {%- else  -%} \n    {%- set height = 1600 -%} \n  {%- endif -%} \n  {%- set thumb_width = width < max_thumb_width ? width: max_thumb_width -%} \n  {%- set thumb_height = (thumb_width\/width * height)|round() -%} \n  {% set canvasId = nodeurl|render ~ '\/iiif\/canvas\/p' ~ itemCount %} \n  {% set structureCanvasIds = structureCanvasIds|merge([canvasId]) %} \n{% set thumbnail -%} \n\"thumbnail\": [ \n        { \n          \"id\": \"{{ cantaloupeid }}\/full\/{{thumb_width}},\/0\/default.jpg\", \n          \"type\": \"Image\", \n          \"format\": \"image\/jpeg\", \n          \"width\": {{ thumb_width }}, \n          \"height\": {{ thumb_height }} \n        } \n      ], \n{%- endset %} \n      \"id\": \"{{ canvasId }}\", \n      \"type\": \"Canvas\", \n      \"label\": { \"{{ len }}\": [ \n      {%- if (image_count > 1) -%} \n      {{ (loop.index ~ ' of ' ~ image_count ~ ' images: ' ~ data.label)|json_encode|raw }} \n      {% else %} \n       {{ data.label|json_encode|raw }} \n      {%- endif -%} \n      ]}, \n      {{ thumbnail }} \n      \"height\": {{ height }}, \n      \"width\": {{ width }}, \n      \"items\": [ \n        { \n          \"id\": \"{{ nodeurl }}\/iiif\/page\/p{{ itemCount}}\", \n          \"type\": \"AnnotationPage\", \n          \"items\": [ \n            { \n              \"id\": \"{{ nodeurl }}\/iiif\/annotation\/p{{ itemCount }}\", \n              \"type\": \"Annotation\", \n              \"motivation\": \"painting\",      \n              {{ thumbnail }}           \n              \"body\": { \n                \"id\": \"{{ cantaloupeid }}\/full\/full\/0\/default.jpg\", \n                \"type\": \"Image\", \n                \"format\": \"image\/jpeg\", \n                \"service\": [ \n                  { \n                    \"id\": \"{{ cantaloupeid }}\", \n                    \"type\": \"ImageService2\", \n                    \"profile\": \"level2\" \n                  } \n                ], \n                \"height\": {{ height }}, \n                \"width\": {{ width }} \n              }, \n              \"target\": \"{{ nodeurl }}\/iiif\/canvas\/p{{ itemCount }}\" \n            } \n          ] \n        } \n      ] \n  {#- Annotations for this canvas \n \"annotations\": [ \n        { \n          \"id\": \"https:\/\/iiif.io\/api\/cookbook\/recipe\/0021-tagging\/page\/p2\/1\", \n          \"type\": \"AnnotationPage\", \n          \"items\": [ \n            { \n              \"id\": \"https:\/\/iiif.io\/api\/cookbook\/recipe\/0021-tagging\/annotation\/p0002-tag\", \n              \"type\": \"Annotation\", \n              \"motivation\": \"tagging\", \n              \"body\": { \n                \"type\": \"TextualBody\", \n                \"value\": \"G\u00e4nseliesel-Brunnen\", \n                \"language\": \"de\", \n                \"format\": \"text\/plain\" \n              }, \n              \"target\": \"https:\/\/iiif.io\/api\/cookbook\/recipe\/0021-tagging\/canvas\/p1#xywh=265,661,1260,1239\" \n            } \n          ] \n        } \n      ] \n -#}  \n      {%- if data[\"ap:annotationCollection\"][cantaloupeid ~ '\/info.json'] is defined %} \n       , \n       \"annotations\": [ \n           { \n           \"id\": \"{{ nodeurl }}\/iiif\/comments\/p{{ itemCount }}\", \n           \"type\": \"AnnotationPage\", \n           \"items\": [ \n        {% for annotation in data[\"ap:annotationCollection\"][cantaloupeid ~ '\/info.json'] %} \n    \t{ \n               \"id\": \"{{ nodeurl }}\/iiif\/comments\/p{{ itemCount }}\/{{ annotation.id }}\", \n               {# @TODO a single annotation might have multiple Bodies and multiple motivations #} \n               \"motivation\": \"tagging\", \n               {% set temp_annotation_body = [] %} \n               {# We need to enrich here, missing language and format #} \n               {% if annotation.body is iterable %} \n                 {% for body in annotation.body %} \n                   {% set annotation_body = body|merge({'language': len, 'format': 'text\/plain'}) %} \n                   {% set temp_annotation_body = temp_annotation_body|merge([annotation_body]) %} \n                 {% endfor %} \n               {% else %} \n               {% endif %} \n               \"body\": {{ temp_annotation_body|json_encode|raw }}, \n               \"type\": {{ annotation.type|json_encode(constant('JSON_FORCE_OBJECT'))|raw }} \n               {# check target type: If polygon we need the selector, if a square, we need the xywh #} \n               {% if annotation.target.selector.type == \"FragmentSelector\" %} \n               {# MIRADOR does not know how to hande \"pixel:\" in the fragment coordinates selector #} \n                 {% set target = nodeurl|render ~ \"\/iiif\/canvas\/p\" ~ itemCount ~ '#' ~ annotation.target.selector.value|replace({\"pixel:\" : \"\"}) %} \n                 ,\"target\": {{ target|json_encode|raw }} \n               {% else %} \n               {# Parse our polygon point values into path for Mirador #} \n                 {% if 'points=\"' in annotation.target.selector.value %} \n                   {% set mirador_path = annotation.target.selector.value | preg_replace('\/.+?points=\"\/','') | preg_replace('\/\".*\/','') %} \n                   {% set mirador_path = \"M\" ~ (mirador_path|split(\" \")|join(\"L\")) ~ \" z\" %} \n                   {% set target = { \n                     \"source\" : nodeurl|render ~ \"\/iiif\/canvas\/p\" ~ itemCount, \n                     \"selector\": { \n                       \"type\":  annotation.target.selector.type, \n                       \"value\": '<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\"><g><path d=\"' ~ mirador_path ~ '\"\/><\/g><\/svg>' \n                     }, \n                     \"type\": \"SpecificResource\" \n               \t   } %} \n                   ,\"target\": {{ target|json_encode|raw }} \n                 {% endif %} \n               {% endif %} \n       }{{ not loop.last ? ',' : '' }}       \n       {% endfor -%} \n       ]}] \n      {% endif %} \n    }{{ not loop.last ? ',' : '' }} \n{% endfor %}\n{#- Video Manifest -#}\n{%- if (attribute(data, 'as:video')|length > 0) -%}\n  {%- if itemCount > 0 -%}\n, \n  {%- endif -%} \n{#- Count Videos upfront -#}\n{%- set video_count = attribute(data, 'as:video')|length -%} \n{% for video in attribute(data, 'as:video') %}\n  {%- set itemCount = itemCount + 1 -%}\n  {%- set cantaloupeid  = IIIFserverurl ~ video['url']|replace({'s3:\/\/':''})|replace({'private:\/\/':''})|url_encode -%}\n  {%- if video[\"flv:exif\"] -%} \n    {%- set width = video[\"flv:mediainfo\"].videos[0].width.absoluteValue|default(720) -%}\n  {% else  %}\n    {%- set width = 720 -%}\n  {% endif %}\n  {%- if video[\"flv:mediainfo\"] -%}\n    {%- set height = video[\"flv:mediainfo\"].videos[0].height.absoluteValue -%}\n  {%- else  -%}\n    {%- set height = 480 -%}\n  {%- endif -%}\n  {%- set thumb_width = width < max_thumb_width ? width: max_thumb_width -%}\n  {%- set thumb_height = (thumb_width\/width * height)|round() -%}\n  {% set thumbnail -%}\n\"thumbnail\": [ \n        { \n          \"id\": \"{{ cantaloupeid }};1\/full\/{{thumb_width}},\/0\/default.jpg\", \n          \"type\": \"Image\", \n          \"format\": \"image\/jpeg\", \n          \"width\": {{ thumb_width }}, \n          \"height\": {{ thumb_height }} \n        } \n      ], \n{%- endset %} \n    {% set canvasId = nodeurl|render ~ '\/iiif\/canvas\/p' ~ itemCount %} \n    {% set structureCanvasIds = structureCanvasIds|merge([canvasId]) %} \n    { \n    \"id\": \"{{ canvasId }}\", \n    \"type\": \"Canvas\", \n    \"label\": { \"{{ len }}\": [ \n    {%- if (video_count > 1) -%} \n      {{ (loop.index ~ ' of ' ~ video_count ~ ' videos: ' ~ data.label)|json_encode|raw }} \n    {% else %} \n      {{ (\"Video:\" ~ data.label)|json_encode|raw }} \n    {%- endif -%} \n    ]}, \n    {{ thumbnail }} \n    \"width\": {{ width }}, \n    \"height\": {{ height }}, \n    \"duration\": {{ video[\"flv:mediainfo\"].videos[0].duration.milliseconds|default(1000) }}, \n    \"items\": [ \n        { \n          \"id\": \"{{ nodeurl }}\/iiif\/page\/p{{ itemCount }}\", \n          \"type\": \"AnnotationPage\", \n          \"items\": [ \n            { \n              \"id\": \"{{ nodeurl }}\/iiif\/annotation\/p{{ itemCount }}\", \n              \"type\": \"Annotation\", \n              \"motivation\": \"painting\", \n              {{ thumbnail }} \n              \"body\": { \n                \"id\": \"{{ baseurl }}do\/{{ node.id }}\/iiif\/{{ video['dr:uuid'] }}\/full\/full\/0\/{{  video.name }}\", \n                \"type\": \"Video\", \n                \"format\": \"{{ video[\"flv:mediainfo\"].general.internet_media_type }}\", \n                \"duration\": {{ video[\"flv:mediainfo\"].videos[0].duration.milliseconds|default(1000) }}, \n                \"height\": {{ height }}, \n                \"width\": {{ width }} \n              }, \n              \"target\": \"{{ nodeurl }}\/iiif\/canvas\/p{{ itemCount }}\" \n            } \n          ] \n        } \n      ] \n    }{{ not loop.last ? ',' : '' }} \n  {% endfor %} \n{% endif %} \n{# Audio Manifest #} \n{%- if (attribute(data, 'as:audio')|length > 0) -%} \n  {%- if itemCount > 0 -%} \n, \n  {%- endif -%} \n{#- Count Audios upfront -#} \n{%- set audio_count = attribute(data, 'as:audio')|length -%} \n{% for audio in attribute(data, 'as:audio') %} \n    {%- set itemCount = itemCount + 1 -%} \n    {% set canvasId = nodeurl|render ~ '\/iiif\/canvas\/p' ~ itemCount %} \n    {% set structureCanvasIds = structureCanvasIds|merge([canvasId]) %} \n    { \n    \"id\": \"{{ canvasId }}\", \n    \"type\": \"Canvas\", \n    \"label\": { \"{{ len }}\": [ \n      {%- if (audio_count > 1) -%} \n        {{ (loop.index ~ ' of ' ~ audio_count ~ ' audios: ' ~ data.label)|json_encode|raw }} \n      {% else %} \n        {{ (\"Audio:\" ~ data.label )|json_encode|raw }} \n      {%- endif -%} \n      ]}, \n    \"duration\": {{ audio[\"flv:mediainfo\"].audios[0].duration.milliseconds|default(1000) }}, \n    \"items\": [ \n        { \n          \"id\": \"{{ nodeurl }}\/iiif\/page\/p{{ itemCount }}\", \n          \"type\": \"AnnotationPage\", \n          \"items\": [ \n            { \n              \"id\": \"{{ nodeurl }}\/iiif\/annotation\/p{{ itemCount }}\", \n              \"type\": \"Annotation\", \n              \"motivation\": \"painting\",      \n              {{ thumbnail }}           \n              \"body\": { \n                \"id\": \"{{ baseurl }}do\/{{ node.id }}\/iiif\/{{ audio['dr:uuid'] }}\/full\/full\/0\/{{  audio.name }}\", \n                \"type\": \"Sound\", \n                \"format\": \"{{ audio[\"flv:mediainfo\"].general.internet_media_type }}\", \n                \"duration\": {{ audio[\"flv:mediainfo\"].audios[0].duration.milliseconds|default(1000) }} \n              }, \n              \"target\": \"{{ nodeurl }}\/iiif\/canvas\/p{{ itemCount }}\" \n            } \n          ] \n        } \n      ] \n    }{{ not loop.last ? ',' : '' }} \n  {% endfor %} \n{% endif %} \n{#-- END TOP LEVEL --#}\n{# start fetch all children using a View and attach them as Items #}\n{% set canvases_view = drupal_view('data_creativeworks_series','children_ispartof_canvas_rest', nodeid)|render %}\n{% set canvases_items = canvases_view|sbf_json_decode %}\n{#- Count children upfront but also there are any \nother previously so we add only a comma if both things match -#}\n{%- if canvases_items|length > 0 -%}\n  {%- if itemCount > 0 -%}\n,\n  {%- endif -%}\n{%- endif -%}\n{#- End Count children upfront -#}\n{% set ranges = {} %}\n{% for canvas in canvases_items %}\n  {% set items = canvas['canvas']|sbf_json_decode %}\n  {% for item in items['items'] %}\n    {% set structureCanvasIds = structureCanvasIds|merge([item['id']]) %}\n    {{ item|json_encode(constant('JSON_PRETTY_PRINT'))|raw }}{{ not loop.parent.loop.last or not loop.last ? ',' : '' }}\n  {% endfor %}\n{% endfor %}\n],\n\"structures\": [\n    {\n      \"id\": \"{{ nodeurl }}\/iiif\/range\/r1\",\n      \"type\": \"Range\",\n      \"label\": {\n        \"{{ len }}\": [\n          {{ node.label|json_encode|raw  }}\n        ]\n      },\n      \"items\": [\n{% for rangeItem in structureCanvasIds %}\n        {\n          \"id\":  \"{{ rangeItem }}\",\n          \"type\": \"Canvas\"\n        }{{ not loop.last ? ',' : '' }}\n{% endfor %}\n      ]\n    }\n  ]\n}\n",
            "langcode": "und",
            "mimetype": "application/ld+json"
        }
    }
}
